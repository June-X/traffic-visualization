<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:View="View.*" xmlns:local="*" >
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
		<mx:SolidColorStroke id="DateAxisStroke" color="#9B9B9B"
							 weight="8" alpha=".75" caps="none" />
		
		<!--fx:Model id="dataset" source="../xml/events.xml"/-->	
		<!--s:ArrayCollection id="mygraphAC" source="{ArrayUtil.toArray(dataset.event)}" /-->
		
		<!--fx:XML id="mydata" xmlns="">
			<events>
				<event date="2010-4-12 21:1:47.761" type="KB" tl="BASE" data="www.google.com" />
				<event date="2010-04-12 21:03:52.116647" type="URL" tl="BASE" ip="66.249.81.104" domain="google.com" URL="www.google.com" />
				<event date="2010-04-12 21:03:52.265255" type="URL" tl="BASE" ip="66.249.81.104" domain="google.com" URL="www.google.com/intl/en_ALL/images/logo.gif" />
				<event date="2010-4-12 21:4:24.462" type="KB" tl="BASE" data="www." />
				<event date="2010-4-12 21:4:25.321" type="KB" tl="BASE" data="google." />
				<event date="2010-04-12 21:04:25.2331" type="URL" tl="BASE" ip="66.249.81.104" domain="google.com" URL="www.google.com/" />
				<event date="2010-4-12 21:4:26.9" type="KB" tl="BASE" data="com" />
				<event date="2010-04-12 21:04:26.216489" type="URL" tl="BASE" ip="74.125.93.138" domain="google.com" URL="clients1.google.com/generate_204" />
				<event date="2010-04-12 21:04:26.322577" type="URL" tl="BASE" ip="66.249.81.104" domain="google.com" URL="www.google.com/csi" />
				<event date="2010-4-12 21:1:48.627" type="KB" tl="BASE" data="google." />
				<event date="2010-4-12 21:1:49.296" type="KB" tl="BASE" data="com" />
				<event date="2010-4-12 21:1:53.934" type="KB" tl="BASE" data="www." />				
				<event date="2010-4-12 21:7:8.551" type="MC" tl="BASE" domain="vt.edu" URL="https://webmail.cs.vt.edu/horde/imp/redirect.php" />	
			</events>		
		</fx:XML-->
		<fx:XML id="mydata" source="../xml/sample.xml" />
		<!--s:HTTPService id="dataxml" url="xml/sample.xml" result="resultHandler(event)" /-->
		<!--s:ArrayCollection id="mydataAC" source="{ArrayUtil.toArray(mydata.event)}" /-->
		<mx:SolidColorStroke id="scrollerStroke" weight="8" color="0x884422" alpha="0.8" caps="round" />
	</fx:Declarations>

	<fx:Script>
		<![CDATA[
			import com.google.maps.LatLng;
			import com.google.maps.LatLngBounds;
			import com.google.maps.Map;
			import com.google.maps.MapEvent;
			import com.google.maps.MapMouseEvent;
			import com.google.maps.MapType;
			import com.google.maps.interfaces.IPane;
			import com.google.maps.overlays.Marker;
			
			import flash.geom.ColorTransform;
			
			import flashx.textLayout.events.DamageEvent;
			
			import mx.charts.events.ChartItemEvent;
			import mx.collections.ArrayCollection;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.xml.SimpleXMLDecoder;
			import mx.utils.ArrayUtil;
			
			
			/*
			private function onMapReady(event:Event):void {
				map.setCenter(new LatLng(37.4419, -122.1419), 13, MapType.NORMAL_MAP_TYPE);
				
				// Add 5 markers to the map at random locations
				var bounds:LatLngBounds = map.getLatLngBounds();
				var southWest:LatLng = bounds.getSouthWest();
				var northEast:LatLng = bounds.getNorthEast();
				var lngSpan:Number = northEast.lng() - southWest.lng();
				var latSpan:Number = northEast.lat() - southWest.lat();
				for (var i:Number = 0; i < 5; i++) {
					var latlng:LatLng = new LatLng(southWest.lat() + latSpan * Math.random(),
						southWest.lng() + lngSpan * Math.random());
					map.addOverlay(createMarker(latlng, i + 1));
				}
			}
			
			private function createMarker(latlng:LatLng, number:Number):Marker {
				var marker:Marker = new Marker(latlng);
				//var customOverlay:TooltipOverlay = new TooltipOverlay(latlng, "Marker #" + number);
				marker.addEventListener(MapMouseEvent.ROLL_OVER, function(e:MapMouseEvent):void {
					//map.addOverlay(customOverlay);
				});
				marker.addEventListener(MapMouseEvent.ROLL_OUT, function(e:MapMouseEvent):void {
					//map.removeOverlay(customOverlay);
				});
				return marker;
			}*/
			[Bindable]private var mygraphAC:ArrayCollection = new ArrayCollection([
				{ type: "KB", date:"2010-4-12 21:1:47.761",data: "www.google.com", tl:"BASE"},
				{ type: "URL", date:"2010-04-12 21:03:52.116647",domain: "google.com", tl:"BASE", ip:"66.249.81.104", URL:"www.google.com"},
				{ type: "URL", date:"2010-04-12 21:03:52.265255",domain: "google.com", tl:"BASE", ip:"66.249.81.104", URL:"www.google.com"},
				{ type: "KB", date:"2010-4-12 21:4:24.462",data: "www.", tl:"BASE"},
				{ type: "KB", date:"2010-4-12 21:4:25.321",data: "google.", tl:"BASE"},
				{ type: "URL", date:"2010-04-12 21:04:25.2331",domain: "google.com", tl:"BASE",ip:"66.249.81.104", URL:"www.google.com"},
				{ type: "KB", date:"2010-4-12 21:4:26.9",data: "com", tl:"BASE"},
				{ type: "URL", date:"2010-04-12 21:04:26.216489",domain: "google.com", tl:"BASE",ip:"74.125.93.138", URL:"clients1.google.com"},
				{ type: "URL", date:"2010-04-12 21:04:26.322577",domain: "google.com", tl:"BASE",ip:"66.249.81.104", URL:"www.google.com"},
				{ type: "KB", date:"2010-4-12 21:1:48.627",data: "googledot", tl:"BASE"},
				{ type: "KB", date:"2010-4-12 21:1:49.296",data: "com", tl:"BASE"},
				{ type: "KB", date:"2010-4-12 21:1:53.934",data: "www.", tl:"BASE"},
				{ type: "MC", date:"2010-4-12 21:7:8.551",domain: "vt.edu", tl:"BASE", URL:"webmail.cs.vt.edu"}]);
			 
			 //Dynamically generate this in future 
			//private var XML_PATH:String = "../xml/events.xml";
			//[Bindable]private var mydata:ArrayCollection;
			//[Bindable]private var mygraphAC:ArrayCollection;
			[Bindable]private var xcategoryAC:ArrayCollection = new ArrayCollection([{type:"URL"}, {type:"BASE"}, {type:"MC"}, {type:"KB"}]);
			
			/*
			private function resultHandler(event:ResultEvent):void
			{
				mydata = event.result.list.item as ArrayCollection;
			}*/
			
			
			public function parseDate(s:String):Date{
			   //Get an array of Strings from the dash-seperated String
				var a:Array = s.split(" ");
				trace(s);
				var d:Array = a[0].split("-");
				var t:Array = a[1].split(":")
				var b:Array = a[1].split(".");
				//var t:Array = b[0].split(":");
				//Create the new Date Object, Subtract one from the month property
				var newDate:Date = new Date(d[0], d[1]-1, d[2], t[0], t[1], t[2], b[1]);
				//var newDate:String = a[1].toString();
				//var newDate:Date = new Date(d[0], d[1]-1, d[2]);
				return newDate;
			}
			
			/*
			protected function itemExpandClickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				Alert.show("Expand Request");
			}
			*/

			protected function itemDataClick(event:MouseEvent):void
			{
				// TODO send data to a specified server
				
				Alert.show("Data Click");
			}

			/*
			private function convertXMLTOArrayCollection(file:String):ArrayCollection
			{
				var xml:XMLDocument = new XMLDocument(file);
				
				var decoder:SimpleXMLDecoder = new SimpleXMLDecoder();
				var events:Object = decoder.decodeXML(xml);
				var array:Array = ArrayUtil.toArray(events.event);
				
				return new ArrayCollection(array);
			}
			*/
			/*
			protected function init():void
			{
				// TODO Auto-generated method stub
				loadXML();
			}
			
			private function loadXML():void
			{
				
				var dataxml:XMLDocument = new XMLDocument(XML_PATH);
				
				var decoder:SimpleXMLDecoder = new SimpleXMLDecoder(true);
				var data:Object = decoder.decodeXML(dataxml);
				
			 	mydataAC = new ArrayCollection(Array(data.root.list.source.event));
				
			}*/
			
			

		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up"/>
		<s:State name="over"/>
		<s:State name="down" basedOn="over"/>
	</s:states>
	
	<!-- skinClass="MyPanelSkins" -->
	
	<s:Panel id="myPanel" width="100%" height="568" skinClass="MyPanelSkins"
			 title="Network Visualization" x="0" y="0">
		<s:VGroup horizontalCenter="0">
			<s:HGroup>
				<!--Canvas Size Controller, Move the cursor can change the size of components in the convas -->
				<s:Label text="Width:"/>
				<s:HSlider id="sliderW"
						   minimum="100"
						   maximum="{myPanel.width}"
						   value="300"
						   liveDragging="true" />
				<s:Label text="Height:"/>
				<s:HSlider id="sliderH"
						   minimum="100"
						   maximum="550"
						   value="200"
						   liveDragging="true" />
			</s:HGroup>
		
			
			<!--Main Display Area xmlns:view="view.*" -->
			<!--<s:Scroller width="600" height="550" horizontalScrollPolicy="auto" verticalScrollPolicy="auto"> -->
			<mx:Canvas id="bdr" width="{sliderW.value}" height="{sliderH.value}" borderVisible="false" depth="0">
				<mx:LineChart id="myTrafficChart" width="100%" height="100%" showDataTips="false" selectionMode="none" visible="true" dataProvider="{mydata.children()}">
             
					<mx:backgroundElements>
						<!--Define the line among plot items and between plot item and line item-->
						<mx:GridLines visible="false"/>
					</mx:backgroundElements>
					
					
					<!--parseFunction="parseDate" mx:SeriesSlide  id="exp" direction="down" elementOffset="150" dataUnits="seconds" dataInterval="0.1" parseFunction="parseDate" / -->
					
					<mx:horizontalAxis>
					 	<mx:DateTimeAxis id="DateAxis" dataUnits="seconds" dataInterval="1" parseFunction="parseDate"  />
			    	</mx:horizontalAxis>
					
					<mx:horizontalAxisRenderers>
						<local:ScrollableAxisRenderer id="hscrollAxisRenderer" axis="{DateAxis}" tickPlacement="none"  
													 placement="bottom" showLine="true" axisStroke="{scrollerStroke}" />
					</mx:horizontalAxisRenderers>
					
					<!--mx:horizontalAxisRenderers>
						<:AxisRenderer axis="{DateAxis}" showLabels="false" showLine="false" tickPlacement="none" minorTickPlacement="none">
							<mx:axisStroke>{DateAxisStroke}</mx:axisStroke>
						</mx:AxisRenderer>
					</mx:horizontalAxisRenderers -->
					
			    	<mx:verticalAxis>
						<mx:CategoryAxis id="TypeAxis" dataProvider="{xcategoryAC}" categoryField="type" />
			    	</mx:verticalAxis>
						
					<!--mx:verticalAxisRenderers>
						<local:ScrollableAxisRenderer id="vscrollAxisRenderer" axis="{TypeAxis}" tickPlacement="none"  
													 labelGap="20"  maxVisibleColumns="8" placement="left" />
					</mx:verticalAxisRenderers -->
 
					<mx:verticalAxisRenderers>
					 	<local:ScrollableAxisRenderer id="vscrollAxisRenderer" axis="{TypeAxis}" showLabels="false" showLine="false"
						  	tickPlacement="none" minorTickPlacement="none"/>
					</mx:verticalAxisRenderers>
					
					<!--itemRenderer="MyDataRenderer" -->
					<mx:series>
						<mx:PlotSeries id="pdata" dataProvider="{mydata.children()}" xField="@date" yField="@type" itemRenderer="MyDataRenderer">
							<!--mx:itemRenderer>
								<fx:Component >
									<s:Panel title="data" skinClass="MyPanelSkins" top="0" right="5">
										<s:layout>
											<s:VerticalLayout/>
										</s:layout>
										<mx:Text text="event" top="0"/>
									</s:Panel>
								</fx:Component>	
							</mx:itemRenderer-->
						</mx:PlotSeries>
						
						<mx:LineSeries id="ldata" focusRect="true" dataProvider="{mydata.children()}" xField="@date" yField="@tl" width="1" height="1" itemRenderer="MyTimeLineRenderer">
									   <mx:lineStroke>
										   <s:SolidColorStroke color="0x000080" weight="2" alpha="1.0" caps="square"/>
									   </mx:lineStroke>
						</mx:LineSeries>
						<mx:HLOCSeries id="vdata" dataProvider="{mydata.children()}" xField="@date" openField="@type" closeField="@tl" lowField="@type" 
							highField="@tl" >    
							<mx:stroke>
								<s:SolidColorStroke weight="1" color="0xF0F8FF"/>
							</mx:stroke>
						</mx:HLOCSeries>
					</mx:series>
					
					<!--mx:Legend dataProvider="{mydata}" color = "0x323232" /-->
					
					
				</mx:LineChart>
			</mx:Canvas>
			<!--</s:Scroller> -->

			
			<!--Detail Information of UserInput or URL  -->
			<s:Panel width="100%" height="100%"
					 skinClass="MyPanelSkins"
					 title="URL Location on Google Map" x="0" y="0">
			<!--maps:Map id="map" url="127.0.0.1" key="ABQIAAAAMSfKWynJzaOyrYA-3vN_ahQMXmws070rUph23y6VVuMampI-OBSH02ZbgEbN8CBmmpCnTZP4OyshCw" mapevent_mapready="onMapReady(event)" /-->
			</s:Panel>
			
			
		</s:VGroup>
	</s:Panel>
	
	
	
</s:WindowedApplication>
